{"is_source_file": true, "format": "Python", "description": "This is an API routing module for managing inventory-related operations within a FastAPI application. It defines endpoints for listing locations, lots, and inventory transactions, with role-based access controls and support for filtering and pagination.", "external_files": ["src/core/deps", "src.repositories.inventory", "src.schemas.inventory"], "external_methods": ["get_tenant_session", "require_roles", "LocationRepository.list_locations", "LotRepository.list_lots", "InventoryTransactionRepository.list_transactions", "LocationRead.model_validate", "LotRead.model_validate", "InventoryTransactionRead.model_validate"], "published": ["router"], "classes": [{"name": "LocationRead", "description": "Pydantic schema for returning location data."}, {"name": "LotRead", "description": "Pydantic schema for returning lot data."}, {"name": "InventoryTransactionRead", "description": "Pydantic schema for returning inventory transaction data."}], "methods": [{"name": "List[LocationRead] list_locations( session: AsyncSession = Depends(get_tenant_session), limit: int = Query(100, ge=1, le=1000, description=\"Max records\"), offset: int = Query(0, ge=0, description=\"Records to skip\"), )", "description": "Handles GET requests to list inventory locations within the tenant scope.", "scope": "", "scopeKind": ""}, {"name": "List[LotRead] list_lots( session: AsyncSession = Depends(get_tenant_session), item_sku: Optional[str] = Query(None, description=\"Filter by item SKU\"), status: Optional[str] = Query(None, description=\"Filter by status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list inventory lots with optional filters.", "scope": "", "scopeKind": ""}, {"name": "List[InventoryTransactionRead] list_inventory_transactions( session: AsyncSession = Depends(get_tenant_session), lot_id: Optional[UUID] = Query(None, description=\"Filter by lot\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list inventory transactions with optional filtering by lot.", "scope": "", "scopeKind": ""}], "calls": ["src.repositories.inventory.LocationRepository.list_locations", "src.repositories.inventory.LotRepository.list_lots", "src.repositories.inventory.InventoryTransactionRepository.list_transactions", "src.schemas.inventory.LocationRead.model_validate", "src.schemas.inventory.LotRead.model_validate", "src.schemas.inventory.InventoryTransactionRead.model_validate"], "search-terms": ["inventory API routes", "list_locations endpoint", "list_lots endpoint", "list_inventory_transactions endpoint", "tenant scoped inventory", "role-based access control", "inventory locations list", "inventory lots list", "inventory transactions list"], "state": 2, "file_id": 43, "knowledge_revision": 105, "git_revision": "", "ctags": [{"_type": "tag", "name": "list_inventory_transactions", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/inventory.py", "pattern": "/^async def list_inventory_transactions($/", "language": "Python", "typeref": "typename:List[InventoryTransactionRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), lot_id: Optional[UUID] = Query(None, description=\"Filter by lot\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "list_locations", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/inventory.py", "pattern": "/^async def list_locations($/", "language": "Python", "typeref": "typename:List[LocationRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), limit: int = Query(100, ge=1, le=1000, description=\"Max records\"), offset: int = Query(0, ge=0, description=\"Records to skip\"), )"}, {"_type": "tag", "name": "list_lots", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/inventory.py", "pattern": "/^async def list_lots($/", "language": "Python", "typeref": "typename:List[LotRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), item_sku: Optional[str] = Query(None, description=\"Filter by item SKU\"), status: Optional[str] = Query(None, description=\"Filter by status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/inventory.py", "pattern": "/^router = APIRouter(prefix=\"\\/inventory\", tags=[\"Inventory\"])$/", "language": "Python", "kind": "variable"}], "hash": "0446c9571dc44434f1e9a536e47b73d5", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/api/routes/inventory.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/inventory\", tags=[\"Inventory\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"105": ""}]}
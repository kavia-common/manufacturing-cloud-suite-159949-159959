{"is_source_file": true, "format": "Python", "description": "This is a Python source file that provides database seeding utilities for a manufacturing application's database. It includes functions to set up initial data such as tenants, permissions, roles, units of measure, items, work centers, routing, and BOMs.", "external_files": ["src/db/session", "sqlalchemy", "sqlalchemy.ext.asyncio"], "external_methods": ["get_async_session", "tenant_context"], "published": ["seed_all"], "classes": [], "methods": [{"name": "None seed_all()", "description": "Main function to seed the database with minimal reference data, creating or retrieving tenants, security roles, units, items, work center, routing, and BOM.", "scope": "", "scopeKind": ""}, {"name": "UUID _ensure_base_tenant(session: AsyncSession, name: str, slug: str)", "description": "Ensures a tenant with specified slug exists; creates it if not.", "scope": "", "scopeKind": ""}, {"name": "None _seed_security(session: AsyncSession)", "description": "Seeds a minimal admin role, permissions, and links them together.", "scope": "", "scopeKind": ""}, {"name": "dict[str,UUID] _seed_uoms(session: AsyncSession)", "description": "Seeds units of measure and returns a mapping of code to UUID.", "scope": "", "scopeKind": ""}, {"name": "dict[str,UUID] _seed_items(session: AsyncSession, uoms: dict[str, UUID])", "description": "Seeds sample items (raw material and finished good) and returns a mapping of SKU to UUID.", "scope": "", "scopeKind": ""}, {"name": "UUID _seed_work_center(session: AsyncSession)", "description": "Seeds a work center and an optional asset linked to it, returning its UUID.", "scope": "", "scopeKind": ""}, {"name": "None _seed_routing_and_bom( session: AsyncSession, items: dict[str, UUID], uoms: dict[str, UUID], work_center_id: UUID, )", "description": "Creates routing, routing operation, BOM, and BOM line for a sample product.", "scope": "", "scopeKind": ""}, {"name": "None main()", "description": "Entrypoint function to run the seeding asynchronously.", "scope": "", "scopeKind": ""}], "calls": ["get_async_session", "tenant_context", "session.execute", "session.commit"], "search-terms": ["database seeding", "manufacturing", "seed_all", "routing", "bom", "units of measure", "permissions", "roles", "assets", "work_center", "items", "tenant"], "state": 2, "file_id": 23, "knowledge_revision": 53, "git_revision": "15a1cbbd6f272c1760342a132335d18ba1fbd641", "revision_history": [{"52": ""}, {"53": "15a1cbbd6f272c1760342a132335d18ba1fbd641"}], "ctags": [{"_type": "tag", "name": "_ensure_base_tenant", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/seed.py", "pattern": "/^async def _ensure_base_tenant(session: AsyncSession, name: str, slug: str) -> UUID:$/", "language": "Python", "typeref": "typename:UUID", "kind": "function", "signature": "(session: AsyncSession, name: str, slug: str)"}, {"_type": "tag", "name": "_seed_items", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/seed.py", "pattern": "/^async def _seed_items(session: AsyncSession, uoms: dict[str, UUID]) -> dict[str, UUID]:$/", "language": "Python", "typeref": "typename:dict[str,UUID]", "kind": "function", "signature": "(session: AsyncSession, uoms: dict[str, UUID])"}, {"_type": "tag", "name": "_seed_routing_and_bom", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/seed.py", "pattern": "/^async def _seed_routing_and_bom($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( session: AsyncSession, items: dict[str, UUID], uoms: dict[str, UUID], work_center_id: UUID, )"}, {"_type": "tag", "name": "_seed_security", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/seed.py", "pattern": "/^async def _seed_security(session: AsyncSession) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(session: AsyncSession)"}, {"_type": "tag", "name": "_seed_uoms", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/seed.py", "pattern": "/^async def _seed_uoms(session: AsyncSession) -> dict[str, UUID]:$/", "language": "Python", "typeref": "typename:dict[str,UUID]", "kind": "function", "signature": "(session: AsyncSession)"}, {"_type": "tag", "name": "_seed_work_center", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/seed.py", "pattern": "/^async def _seed_work_center(session: AsyncSession) -> UUID:$/", "language": "Python", "typeref": "typename:UUID", "kind": "function", "signature": "(session: AsyncSession)"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/seed.py", "pattern": "/^def main() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "seed_all", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/seed.py", "pattern": "/^async def seed_all() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}], "hash": "fa8849f1c61c281073c2662b39ba5318", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/db/seed.py"}
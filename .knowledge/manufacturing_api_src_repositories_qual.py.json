{"is_source_file": true, "format": "Python", "description": "This file defines a repository class for managing quality inspections and nonconformances using SQLAlchemy's async ORM. It provides methods to list inspections and nonconformances with filtering, pagination, and ordering.", "external_files": ["src/db/models/quality.py", ".base"], "external_methods": ["select", "scalars", "session"], "published": ["QualityRepository"], "classes": [{"name": "QualityRepository", "description": "Repository for quality inspections and nonconformances, providing data access methods."}], "methods": [{"name": "None __init__(self, session: AsyncSession)", "description": "Initializes the repository with an async database session.", "scope": "QualityRepository", "scopeKind": "class"}, {"name": "List[Inspection] list_inspections( self, *, work_order_id: Optional[UUID], lot_id: Optional[UUID], status: Optional[str], limit: int, offset: int, )", "description": "Fetches a list of Inspection objects filtered by optional work_order_id, lot_id, status, with pagination support.", "scope": "QualityRepository", "scopeKind": "class"}, {"name": "List[Nonconformance] list_nonconformances( self, *, status: Optional[str], severity: Optional[str], limit: int, offset: int, )", "description": "Fetches a list of Nonconformance objects filtered by optional status and severity, with pagination support.", "scope": "QualityRepository", "scopeKind": "class"}], "calls": ["select(Inspection)", "select(Nonconformance)", "self.scalars", "super().__init__"], "search-terms": ["QualityRepository", "list_inspections", "list_nonconformances", "asyncio", "SQLAlchemy", "quality inspections", "nonconformances"], "state": 2, "file_id": 56, "knowledge_revision": 132, "git_revision": "", "ctags": [{"_type": "tag", "name": "QualityRepository", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/repositories/qual.py", "pattern": "/^class QualityRepository(BaseRepository):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/repositories/qual.py", "pattern": "/^    def __init__(self, session: AsyncSession) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, session: AsyncSession)", "scope": "QualityRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_inspections", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/repositories/qual.py", "pattern": "/^    async def list_inspections($/", "language": "Python", "typeref": "typename:List[Inspection]", "kind": "member", "signature": "( self, *, work_order_id: Optional[UUID], lot_id: Optional[UUID], status: Optional[str], limit: int, offset: int, )", "scope": "QualityRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_nonconformances", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/repositories/qual.py", "pattern": "/^    async def list_nonconformances($/", "language": "Python", "typeref": "typename:List[Nonconformance]", "kind": "member", "signature": "( self, *, status: Optional[str], severity: Optional[str], limit: int, offset: int, )", "scope": "QualityRepository", "scopeKind": "class"}], "hash": "f6ca3f715113d959558fe77cfe120b5d", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/repositories/qual.py", "revision_history": [{"132": ""}]}
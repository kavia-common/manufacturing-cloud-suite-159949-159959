{"is_source_file": true, "format": "Python", "description": "This file defines API routes related to 'production' entities such as work orders and their operations. It uses FastAPI decorators to specify HTTP methods, URL paths, request parameters, response models, and dependencies. The routes include listing, creating, and retrieving work orders and their operations. External dependencies include FastAPI components, SQLAlchemy's AsyncSession, and custom project modules for data access and schemas.", "external_files": ["src/core/deps", "src/repositories/production", "src/schemas/production"], "external_methods": ["get_tenant_session", "require_roles", "WorkOrderRepository.list_work_orders", "WorkOrderRepository.create_work_order", "WorkOrderRepository.get_work_order", "WorkOrderOperationRepository.list_operations"], "published": ["list_work_orders", "create_work_order", "get_work_order", "list_operations"], "classes": [], "methods": [{"name": "List[WorkOrderRead] list_work_orders( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by status\"), order_no: Optional[str] = Query(None, description=\"Filter by order number (substring)\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list work orders with optional filtering and pagination.", "scope": "", "scopeKind": ""}, {"name": "WorkOrderRead create_work_order( payload: WorkOrderCreate, session: AsyncSession = Depends(get_tenant_session), )", "description": "Handles POST requests to create a new work order.", "scope": "", "scopeKind": ""}, {"name": "WorkOrderRead get_work_order( wo_id: UUID = Path(...), session: AsyncSession = Depends(get_tenant_session), )", "description": "Handles GET requests to retrieve a specific work order by its UUID.", "scope": "", "scopeKind": ""}, {"name": "List[WorkOrderOperationRead] list_operations( session: AsyncSession = Depends(get_tenant_session), work_order_id: Optional[UUID] = Query(None, description=\"Filter by work order id\"), status: Optional[str] = Query(None, description=\"Filter by operation status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list work order operations with filtering and pagination.", "scope": "", "scopeKind": ""}], "calls": ["WorkOrderRepository(session).list_work_orders", "WorkOrderRepository(session).create_work_order", "WorkOrderRepository(session).get_work_order", "WorkOrderOperationRepository(session).list_operations", "WorkOrderRead.model_validate", "WorkOrderOperationRead.model_validate", "require_roles", "get_tenant_session"], "search-terms": ["production API routes", "WorkOrder CRUD", "work order operations listing", "FastAPI router", "UUID path param"], "state": 2, "file_id": 45, "knowledge_revision": 109, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_work_order", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^async def create_work_order($/", "language": "Python", "typeref": "typename:WorkOrderRead", "kind": "function", "signature": "( payload: WorkOrderCreate, session: AsyncSession = Depends(get_tenant_session), )"}, {"_type": "tag", "name": "get_work_order", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^async def get_work_order($/", "language": "Python", "typeref": "typename:WorkOrderRead", "kind": "function", "signature": "( wo_id: UUID = Path(...), session: AsyncSession = Depends(get_tenant_session), )"}, {"_type": "tag", "name": "list_operations", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^async def list_operations($/", "language": "Python", "typeref": "typename:List[WorkOrderOperationRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), work_order_id: Optional[UUID] = Query(None, description=\"Filter by work order id\"), status: Optional[str] = Query(None, description=\"Filter by operation status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "list_work_orders", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^async def list_work_orders($/", "language": "Python", "typeref": "typename:List[WorkOrderRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by status\"), order_no: Optional[str] = Query(None, description=\"Filter by order number (substring)\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^router = APIRouter(prefix=\"\\/production\", tags=[\"Production\"])$/", "language": "Python", "kind": "variable"}], "hash": "58e267d55990ce3e4f379f724977f410", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/api/routes/production.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/production\", tags=[\"Production\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"109": ""}]}
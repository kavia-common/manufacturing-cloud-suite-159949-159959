{"is_source_file": true, "format": "Python", "description": "This file defines API routes related to production management in a web application. It includes endpoints for listing, creating, and retrieving work orders and their operations, utilizing FastAPI framework components, with dependencies injected for database sessions, role-based access control, and other services.", "external_files": ["src/core/deps", "src/repositories/production", "src/services/production", "src/schemas/production"], "external_methods": ["get_tenant_session", "require_roles", "get_tenant_id", "WorkOrderRepository.list_work_orders", "WorkOrderRepository.get_work_order", "WorkOrderOperationRepository.list_operations", "ProductionService.create_work_order", "WorkOrderRead.model_validate", "WorkOrderCreate", "WorkOrderRead", "WorkOrderOperationRead"], "published": ["list_work_orders", "create_work_order", "get_work_order", "list_operations"], "classes": [], "methods": [{"name": "List[WorkOrderRead] list_work_orders( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by status\"), order_no: Optional[str] = Query(None, description=\"Filter by order number (substring)\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list work orders with optional filters and pagination, returning a list of WorkOrderRead models.", "scope": "", "scopeKind": ""}, {"name": "WorkOrderRead create_work_order( payload: WorkOrderCreate, session: AsyncSession = Depends(get_tenant_session), tenant_id=Depends(get_tenant_id), )", "description": "Handles POST requests to create a new work order, returning the created WorkOrderRead model.", "scope": "", "scopeKind": ""}, {"name": "WorkOrderRead get_work_order( wo_id: UUID = Path(...), session: AsyncSession = Depends(get_tenant_session), )", "description": "Handles GET requests to retrieve a specific work order by its UUID, raising 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "List[WorkOrderOperationRead] list_operations( session: AsyncSession = Depends(get_tenant_session), work_order_id: Optional[UUID] = Query(None, description=\"Filter by work order id\"), status: Optional[str] = Query(None, description=\"Filter by operation status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list work order operations with optional filters and pagination, returning a list of WorkOrderOperationRead models.", "scope": "", "scopeKind": ""}], "calls": ["WorkOrderRepository(session).list_work_orders", "ProductionService(session).create_work_order", "WorkOrderRepository(session).get_work_order", "WorkOrderOperationRepository(session).list_operations", "WorkOrderRead.model_validate", "WorkOrderRead.model_validate", "WorkOrderOperationRead.model_validate"], "search-terms": ["/production", "work-orders", "operations", "create work order", "list work orders", "get work order", "list work order operations", "production"], "state": 2, "file_id": 45, "knowledge_revision": 151, "git_revision": "090983a3b6b55ceade1c4fe9954386f020440297", "revision_history": [{"109": ""}, {"148": "090983a3b6b55ceade1c4fe9954386f020440297"}, {"150": "090983a3b6b55ceade1c4fe9954386f020440297"}, {"151": "090983a3b6b55ceade1c4fe9954386f020440297"}], "ctags": [{"_type": "tag", "name": "create_work_order", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^async def create_work_order($/", "language": "Python", "typeref": "typename:WorkOrderRead", "kind": "function", "signature": "( payload: WorkOrderCreate, session: AsyncSession = Depends(get_tenant_session), tenant_id=Depends(get_tenant_id), )"}, {"_type": "tag", "name": "get_work_order", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^async def get_work_order($/", "language": "Python", "typeref": "typename:WorkOrderRead", "kind": "function", "signature": "( wo_id: UUID = Path(...), session: AsyncSession = Depends(get_tenant_session), )"}, {"_type": "tag", "name": "list_operations", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^async def list_operations($/", "language": "Python", "typeref": "typename:List[WorkOrderOperationRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), work_order_id: Optional[UUID] = Query(None, description=\"Filter by work order id\"), status: Optional[str] = Query(None, description=\"Filter by operation status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "list_work_orders", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^async def list_work_orders($/", "language": "Python", "typeref": "typename:List[WorkOrderRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by status\"), order_no: Optional[str] = Query(None, description=\"Filter by order number (substring)\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/production.py", "pattern": "/^router = APIRouter(prefix=\"\\/production\", tags=[\"Production\"])$/", "language": "Python", "kind": "variable"}], "hash": "fd0fb4d729f88ff7ee54ef4cc4e16a51", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/api/routes/production.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/production\", tags=[\"Production\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}
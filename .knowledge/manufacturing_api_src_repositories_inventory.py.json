{"is_source_file": true, "format": "Python", "description": "This file defines a Python repository class for managing Location entities using SQLAlchemy with async support. It includes methods to list locations with pagination and to get a specific location by ID, all within a tenant-scoped context.", "external_files": ["src/db/models/inventory.py", ".base"], "external_methods": ["self.scalars", "self.scalar_one_or_none", "super().__init__"], "published": ["LocationRepository"], "classes": [{"name": "LocationRepository", "description": "Repository for Locations, providing methods to query location data with tenant-scoping."}], "methods": [{"name": "None __init__(self, session: AsyncSession)", "description": "Initializes the repository with an async database session.", "scope": "LocationRepository", "scopeKind": "class"}, {"name": "List[Location] list_locations(self, limit: int = 100, offset: int = 0)", "description": "Asynchronously retrieves a paginated list of Location objects, ordered by code.", "scope": "LocationRepository", "scopeKind": "class"}, {"name": "Optional[Location] get_location(self, location_id: UUID)", "description": "Asynchronously retrieves a single Location object by its UUID, or None if not found.", "scope": "LocationRepository", "scopeKind": "class"}], "calls": ["select", "LocationRepository.scalars", "LocationRepository.scalar_one_or_none"], "search-terms": ["LocationRepository", "asyncio", "tenant-scoped", "select Location", "Location.id", "Location.code"], "state": 2, "file_id": 32, "knowledge_revision": 72, "git_revision": "", "ctags": [{"_type": "tag", "name": "LocationRepository", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/repositories/inventory.py", "pattern": "/^class LocationRepository(BaseRepository):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/repositories/inventory.py", "pattern": "/^    def __init__(self, session: AsyncSession) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, session: AsyncSession)", "scope": "LocationRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_location", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/repositories/inventory.py", "pattern": "/^    async def get_location(self, location_id: UUID) -> Optional[Location]:$/", "language": "Python", "typeref": "typename:Optional[Location]", "kind": "member", "signature": "(self, location_id: UUID)", "scope": "LocationRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_locations", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/repositories/inventory.py", "pattern": "/^    async def list_locations(self, limit: int = 100, offset: int = 0) -> List[Location]:$/", "language": "Python", "typeref": "typename:List[Location]", "kind": "member", "signature": "(self, limit: int = 100, offset: int = 0)", "scope": "LocationRepository", "scopeKind": "class"}], "hash": "213e943a3c87d068e0b3b962a4f44828", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/repositories/inventory.py", "revision_history": [{"72": ""}]}
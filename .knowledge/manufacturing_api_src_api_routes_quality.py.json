{"is_source_file": true, "format": "Python", "description": "This file defines API routes related to quality inspections and nonconformances within a FastAPI application. It includes route handlers that interact with a QualityRepository to retrieve data and return serialized response models, with security dependencies and query parameters for filtering and pagination.", "external_files": ["src/core/deps", "src/repositories/qual", "src/schemas/quality"], "external_methods": ["get_tenant_session", "require_roles", "QualityRepository.list_inspections", "QualityRepository.list_nonconformances", "InspectionRead.model_validate", "NonconformanceRead.model_validate"], "published": ["list_inspections", "list_nonconformances"], "classes": [], "methods": [{"name": "List[InspectionRead] list_inspections( session: AsyncSession = Depends(get_tenant_session), work_order_id: Optional[UUID] = Query(None, description=\"Filter by work order\"), lot_id: Optional[UUID] = Query(None, description=\"Filter by lot\"), status: Optional[str] = Query(None, description=\"Filter by status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list quality inspections with optional filters and pagination, returning a list of InspectionRead models.", "scope": "", "scopeKind": ""}, {"name": "List[NonconformanceRead] list_nonconformances( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by status\"), severity: Optional[str] = Query(None, description=\"Filter by severity\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list nonconformance records with optional filters and pagination, returning a list of NonconformanceRead models.", "scope": "", "scopeKind": ""}], "calls": ["QualityRepository(session).list_inspections", "QualityRepository(session).list_nonconformances", "InspectionRead.model_validate", "NonconformanceRead.model_validate"], "search-terms": ["FastAPI", "quality inspections", "nonconformances", "APIRouter", "list_inspections", "list_nonconformances", "UUID", "asyncio", "query parameters"], "state": 2, "file_id": 47, "knowledge_revision": 113, "git_revision": "", "ctags": [{"_type": "tag", "name": "list_inspections", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/quality.py", "pattern": "/^async def list_inspections($/", "language": "Python", "typeref": "typename:List[InspectionRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), work_order_id: Optional[UUID] = Query(None, description=\"Filter by work order\"), lot_id: Optional[UUID] = Query(None, description=\"Filter by lot\"), status: Optional[str] = Query(None, description=\"Filter by status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "list_nonconformances", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/quality.py", "pattern": "/^async def list_nonconformances($/", "language": "Python", "typeref": "typename:List[NonconformanceRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by status\"), severity: Optional[str] = Query(None, description=\"Filter by severity\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/quality.py", "pattern": "/^router = APIRouter(prefix=\"\\/quality\", tags=[\"Quality\"])$/", "language": "Python", "kind": "variable"}], "hash": "5f13ec9c5d885774eb3bd27b0773fc71", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/api/routes/quality.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/quality\", tags=[\"Quality\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"113": ""}]}
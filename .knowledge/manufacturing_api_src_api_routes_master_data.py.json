{"is_source_file": true, "format": "Python", "description": "This file defines API routes for master data management in a manufacturing cloud suite. It includes endpoints for listing and creating items, and listing and retrieving BOMs and BOM lines, utilizing FastAPI and SQLAlchemy for async database interactions.", "external_files": ["src/core/deps", "src.repositories.master_data", "src.schemas.master_data"], "external_methods": ["get_tenant_session", "require_roles", "ItemRepository.list_items", "ItemRepository.create_item", "BomRepository.list_boms", "BomRepository.get_bom", "BomRepository.list_bom_lines", "ItemRead.model_validate", "BomRead.model_validate", "BomLineRead.model_validate"], "published": ["router"], "classes": [{"name": "ItemRead", "description": "Schema for reading item data"}, {"name": "ItemCreate", "description": "Schema for creating a new item"}, {"name": "BomRead", "description": "Schema for reading BOM data"}, {"name": "BomLineRead", "description": "Schema for reading BOM line data"}], "methods": [{"name": "List[ItemRead] list_items( session: AsyncSession = Depends(get_tenant_session), search: str | None = Query(None, description=\"Filter by SKU or name (substring)\"), status: str | None = Query(None, description=\"Filter by status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list items with optional filtering", "scope": "", "scopeKind": ""}, {"name": "ItemRead create_item( payload: ItemCreate, session: AsyncSession = Depends(get_tenant_session), )", "description": "Handles POST requests to create a new item", "scope": "", "scopeKind": ""}, {"name": "List[BomRead] list_boms( session: AsyncSession = Depends(get_tenant_session), item_id: UUID | None = Query(None, description=\"Filter by item id\"), is_active: bool | None = Query(None, description=\"Filter by active flag\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )", "description": "Handles GET requests to list BOMs with optional filtering", "scope": "", "scopeKind": ""}, {"name": "BomRead get_bom( bom_id: UUID = Path(...), session: AsyncSession = Depends(get_tenant_session), )", "description": "Handles GET requests to retrieve a specific BOM by ID", "scope": "", "scopeKind": ""}, {"name": "List[BomLineRead] list_bom_lines( bom_id: UUID = Path(...), session: AsyncSession = Depends(get_tenant_session), )", "description": "Handles GET requests to list BOM lines for a specific BOM", "scope": "", "scopeKind": ""}], "calls": ["get_tenant_session", "require_roles", "ItemRepository.list_items", "ItemRepository.create_item", "BomRepository.list_boms", "BomRepository.get_bom", "BomRepository.list_bom_lines", "ItemRead.model_validate", "BomRead.model_validate", "BomLineRead.model_validate"], "search-terms": ["API routes", "master data", "BOMs", "items", "FastAPI", "async SQLalchemy", "UUID", "permission roles", "list items", "list BOMs", "create item", "get BOM", "list BOM lines"], "state": 2, "file_id": 46, "knowledge_revision": 111, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_item", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/master_data.py", "pattern": "/^async def create_item($/", "language": "Python", "typeref": "typename:ItemRead", "kind": "function", "signature": "( payload: ItemCreate, session: AsyncSession = Depends(get_tenant_session), )"}, {"_type": "tag", "name": "get_bom", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/master_data.py", "pattern": "/^async def get_bom($/", "language": "Python", "typeref": "typename:BomRead", "kind": "function", "signature": "( bom_id: UUID = Path(...), session: AsyncSession = Depends(get_tenant_session), )"}, {"_type": "tag", "name": "list_bom_lines", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/master_data.py", "pattern": "/^async def list_bom_lines($/", "language": "Python", "typeref": "typename:List[BomLineRead]", "kind": "function", "signature": "( bom_id: UUID = Path(...), session: AsyncSession = Depends(get_tenant_session), )"}, {"_type": "tag", "name": "list_boms", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/master_data.py", "pattern": "/^async def list_boms($/", "language": "Python", "typeref": "typename:List[BomRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), item_id: UUID | None = Query(None, description=\"Filter by item id\"), is_active: bool | None = Query(None, description=\"Filter by active flag\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "list_items", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/master_data.py", "pattern": "/^async def list_items($/", "language": "Python", "typeref": "typename:List[ItemRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), search: str | None = Query(None, description=\"Filter by SKU or name (substring)\"), status: str | None = Query(None, description=\"Filter by status\"), limit: int = Query(100, ge=1, le=1000), offset: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/master_data.py", "pattern": "/^router = APIRouter(prefix=\"\\/master-data\", tags=[\"Master Data\"])$/", "language": "Python", "kind": "variable"}], "hash": "0e702118f23b9404f98d7a8452ca28ff", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/api/routes/master_data.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/master-data\", tags=[\"Master Data\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"111": ""}]}
{"is_source_file": true, "format": "Python", "description": "This file is a Python package initializer that exposes key public interfaces for database configuration, engine/session management, and tenant context helpers within a manufacturing cloud suite project.", "external_files": [".base", ".config", ".session"], "external_methods": ["base.Base", "config.get_settings", "config.Settings", "session.get_engine", "session.get_async_session", "session.set_current_tenant", "session.tenant_context"], "published": ["Base", "Settings", "get_settings", "get_engine", "get_async_session", "set_current_tenant", "tenant_context"], "classes": [{"name": "Base", "description": "Database declarative base class for ORM models."}], "methods": [{"name": "get_settings", "description": "Retrieves the database configuration settings."}, {"name": "Settings", "description": "Data class holding database configuration settings."}, {"name": "get_engine", "description": "Provides the SQLAlchemy engine instance."}, {"name": "get_async_session", "description": "Provides an asynchronous database session."}, {"name": "set_current_tenant", "description": "Sets the current tenant context."}, {"name": "tenant_context", "description": "Context manager for tenant-specific operations."}], "calls": ["from .base import Base", "from .config import get_settings, Settings", "from .session import get_engine, get_async_session, set_current_tenant, tenant_context"], "search-terms": ["database package initializer", "tenant context helpers", "session management", "configuration interface", "ORM base", "database settings"], "state": 2, "file_id": 5, "knowledge_revision": 11, "git_revision": "", "ctags": [{"_type": "tag", "name": "__all__", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/__init__.py", "pattern": "/^__all__ = [$/", "language": "Python", "kind": "variable"}], "hash": "0d85c7355cce018dc39ef2a465324008", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/db/__init__.py", "fields": [{"name": "__all__ = [", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"11": ""}]}
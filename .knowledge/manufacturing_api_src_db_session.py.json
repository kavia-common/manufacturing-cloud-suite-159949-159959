{"is_source_file": true, "format": "Python", "description": "This file manages the creation and configuration of asynchronous database engine and sessions using SQLAlchemy. It provides functions to initialize the engine, obtain sessions for database operations, and handle tenant context for row-level security in a multi-tenant application.", "external_files": ["./config"], "external_methods": ["get_settings"], "published": ["get_engine", "get_async_session", "set_current_tenant", "tenant_context"], "classes": [], "methods": [{"name": "None _ensure_engine_initialized()", "description": "Lazily initializes the AsyncEngine and session maker if they are not already created.", "scope": "", "scopeKind": ""}, {"name": "AsyncEngine get_engine()", "description": "Returns the singleton AsyncEngine instance, initializing it if necessary.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[AsyncSession,None] get_async_session()", "description": "Asynchronously yields an AsyncSession, suitable for dependency injection in frameworks like FastAPI.", "scope": "", "scopeKind": ""}, {"name": "None set_current_tenant( session: AsyncSession, tenant_id: Union[str, UUID] )", "description": "Sets the current tenant context in the database session using a PostgreSQL setting, enabling row-level security policies.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[AsyncSession,None] tenant_context( session: AsyncSession, tenant_id: Union[str, UUID] )", "description": "An async context manager that temporarily sets the tenant context for the session and resets it afterwards.", "scope": "", "scopeKind": ""}], "calls": ["create_async_engine", "async_sessionmaker", "session.execute", "text"], "search-terms": ["async database engine", "tenant context", "row-level security", "async session management", "SQLAlchemy async"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "_SETTINGS", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/session.py", "pattern": "/^_SETTINGS = get_settings()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_ensure_engine_initialized", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/session.py", "pattern": "/^def _ensure_engine_initialized() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_async_session", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/session.py", "pattern": "/^async def get_async_session() -> AsyncGenerator[AsyncSession, None]:$/", "language": "Python", "typeref": "typename:AsyncGenerator[AsyncSession,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_engine", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/session.py", "pattern": "/^def get_engine() -> AsyncEngine:$/", "language": "Python", "typeref": "typename:AsyncEngine", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "set_current_tenant", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/session.py", "pattern": "/^async def set_current_tenant($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( session: AsyncSession, tenant_id: Union[str, UUID] )"}, {"_type": "tag", "name": "tenant_context", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/db/session.py", "pattern": "/^async def tenant_context($/", "language": "Python", "typeref": "typename:AsyncGenerator[AsyncSession,None]", "kind": "function", "signature": "( session: AsyncSession, tenant_id: Union[str, UUID] )"}], "hash": "a8a16c48c8a554f4f453da73ca1fa9fa", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/db/session.py", "fields": [{"name": "_SETTINGS = get_settings()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": ""}]}
{"is_source_file": true, "format": "Python", "description": "This file defines API routes for generating various reports in a manufacturing-related web application. It includes endpoints for inventory valuation, work order status, supplier delivery, and quality defects. The code constructs SQLAlchemy queries, processes data into pandas DataFrames, and supports exporting reports in CSV, XLSX, and PDF formats.", "external_files": ["src.core.deps", "src.db.models.inventory", "src.db.models.procurement", "src.db.models.production", "src.db.models.quality", "fastapi", "pandas", "sqlalchemy", "sqlalchemy.ext.asyncio", "io", "datetime"], "external_methods": ["get_tenant_session", "require_roles", "select", "select", "func", "select", "StreamingResponse", "pd.DataFrame", "pd.ExcelWriter", "getSampleStyleSheet", "SimpleDocTemplate", "Table", "TableStyle", "colors.lightgrey", "colors.black", "colors.grey", "Paragraph", "landscape", "asyncio.execute", "list", "tuple"], "published": ["router", "inventory_valuation_report", "work_order_status_report", "supplier_delivery_report", "quality_defects_report"], "classes": [], "methods": [{"name": "StreamingResponse _export_dataframe( df: pd.DataFrame, filename_base: str, export_format: str, )", "description": "Converts a pandas DataFrame into a StreamingResponse in the requested format (csv, xlsx, pdf). Supports multiple export formats with specific rendering logic for each.", "scope": "", "scopeKind": ""}, {"name": "Sequence _fetch_all(session: AsyncSession, stmt: Select)", "description": "Executes a SQLAlchemy select statement asynchronously and returns the list of result rows.", "scope": "", "scopeKind": ""}, {"name": "inventory_valuation_report( session: AsyncSession = Depends(get_tenant_session), as_of: Optional[date] = Query(None, description=\"As-of date for valuation (currently informational)\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "quality_defects_report( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter nonconformances by status\"), severity: Optional[str] = Query(None, description=\"Filter nonconformances by severity\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "supplier_delivery_report( session: AsyncSession = Depends(get_tenant_session), supplier_id: Optional[str] = Query(None, description=\"Filter by supplier UUID\"), status: Optional[str] = Query(None, description=\"Filter POs by status\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "work_order_status_report( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by work order status\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["get_tenant_session", "require_roles", "select", "select", "select", "select", "select", "select", "select", "select", "select", "select", "StreamingResponse", "pd.DataFrame", "pd.ExcelWriter", "getSampleStyleSheet", "SimpleDocTemplate", "Table", "TableStyle", "Color", "Paragraph", "landscape", "_fetch_all"], "search-terms": ["reports.py", "inventory-valuation", "work-order-status", "supplier-delivery", "quality-defects", "export_dataframe", "asyncio", "APIRouter", "CSV XLSX PDF export", "SQLAlchemy queries"], "state": 2, "file_id": 60, "knowledge_revision": 159, "git_revision": "", "revision_history": [{"157": ""}, {"159": ""}], "ctags": [{"_type": "tag", "name": "_export_dataframe", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^def _export_dataframe($/", "language": "Python", "typeref": "typename:StreamingResponse", "kind": "function", "signature": "( df: pd.DataFrame, filename_base: str, export_format: str, )"}, {"_type": "tag", "name": "_fetch_all", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def _fetch_all(session: AsyncSession, stmt: Select) -> Sequence:$/", "language": "Python", "typeref": "typename:Sequence", "kind": "function", "signature": "(session: AsyncSession, stmt: Select)"}, {"_type": "tag", "name": "inventory_valuation_report", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def inventory_valuation_report($/", "language": "Python", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), as_of: Optional[date] = Query(None, description=\"As-of date for valuation (currently informational)\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )"}, {"_type": "tag", "name": "pd", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^import pandas as pd$/", "language": "Python", "kind": "namespace", "nameref": "module:pandas"}, {"_type": "tag", "name": "quality_defects_report", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def quality_defects_report($/", "language": "Python", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter nonconformances by status\"), severity: Optional[str] = Query(None, description=\"Filter nonconformances by severity\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "supplier_delivery_report", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def supplier_delivery_report($/", "language": "Python", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), supplier_id: Optional[str] = Query(None, description=\"Filter by supplier UUID\"), status: Optional[str] = Query(None, description=\"Filter POs by status\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )"}, {"_type": "tag", "name": "work_order_status_report", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def work_order_status_report($/", "language": "Python", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by work order status\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )"}], "hash": "84cbec669665c63581bac11a3be9055c", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/api/routes/reports.py", "fields": [{"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}]}
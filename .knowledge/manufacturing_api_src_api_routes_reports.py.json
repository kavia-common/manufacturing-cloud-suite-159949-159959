{"is_source_file": true, "format": "Python", "description": "This file defines API routes for generating various reports in a manufacturing API system. It includes endpoints for inventory valuation, work order status, supplier delivery, and quality defects, each supporting export formats like CSV, XLSX, and PDF. It also contains utility functions for data export and database interactions.", "external_files": ["src.core.deps", "src.db.models.inventory", "src.db.models.procurement", "src.db.models.production", "src.db.models.quality", "pandas", "fastapi", "sqlalchemy"], "external_methods": ["get_tenant_session", "require_roles"], "published": ["router"], "classes": [], "methods": [{"name": "StreamingResponse _export_dataframe( df: pd.DataFrame, filename_base: str, export_format: str, )", "description": "Converts a DataFrame to the requested format (CSV, XLSX, PDF) and returns a StreamingResponse for download.", "scope": "", "scopeKind": ""}, {"name": "Sequence _fetch_all(session: AsyncSession, stmt: Select)", "description": "Executes a SQLAlchemy select statement asynchronously and returns all results as a sequence.", "scope": "", "scopeKind": ""}, {"name": "inventory_valuation_report( session: AsyncSession = Depends(get_tenant_session), as_of: Optional[date] = Query(None, description=\"As-of date for valuation (currently informational)\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )", "description": "Generates an inventory valuation report based on lot data and last purchase prices, exported in specified format.", "scope": "", "scopeKind": ""}, {"name": "work_order_status_report( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by work order status\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )", "description": "Produces a report on work orders with operation counts and completion progress, exportable in multiple formats.", "scope": "", "scopeKind": ""}, {"name": "supplier_delivery_report( session: AsyncSession = Depends(get_tenant_session), supplier_id: Optional[str] = Query(None, description=\"Filter by supplier UUID\"), status: Optional[str] = Query(None, description=\"Filter POs by status\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )", "description": "Creates a report on supplier purchase orders and lines, including delivery risk and overdue flags.", "scope": "", "scopeKind": ""}, {"name": "quality_defects_report( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter nonconformances by status\"), severity: Optional[str] = Query(None, description=\"Filter nonconformances by severity\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )", "description": "Generates a report of quality nonconformances with filtering options and supports multiple export formats.", "scope": "", "scopeKind": ""}], "calls": ["select", "select.func.count", "select.scalar_subquery", "select.order_by", "select.where", "select.join", "select.limit", "pd.DataFrame", "pd.ExcelWriter", "io.StringIO", "io.BytesIO", "StreamingResponse", "getSampleStyleSheet", "Paragraph", "Table", "TableStyle", "get_tenant_session", "require_roles"], "search-terms": ["reports", "inventory valuation", "work order status", "supplier delivery", "quality defects", "export_format", "data export", "async database query", "fastapi router"], "state": 2, "file_id": 60, "knowledge_revision": 166, "git_revision": "4e8c5cae63a181b835d887b0ce113dd4b079c82d", "revision_history": [{"157": ""}, {"159": ""}, {"166": "4e8c5cae63a181b835d887b0ce113dd4b079c82d"}], "ctags": [{"_type": "tag", "name": "_export_dataframe", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^def _export_dataframe($/", "language": "Python", "typeref": "typename:StreamingResponse", "kind": "function", "signature": "( df: pd.DataFrame, filename_base: str, export_format: str, )"}, {"_type": "tag", "name": "_fetch_all", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def _fetch_all(session: AsyncSession, stmt: Select) -> Sequence:$/", "language": "Python", "typeref": "typename:Sequence", "kind": "function", "signature": "(session: AsyncSession, stmt: Select)"}, {"_type": "tag", "name": "inventory_valuation_report", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def inventory_valuation_report($/", "language": "Python", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), as_of: Optional[date] = Query(None, description=\"As-of date for valuation (currently informational)\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )"}, {"_type": "tag", "name": "pd", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^import pandas as pd$/", "language": "Python", "kind": "namespace", "nameref": "module:pandas"}, {"_type": "tag", "name": "quality_defects_report", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def quality_defects_report($/", "language": "Python", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter nonconformances by status\"), severity: Optional[str] = Query(None, description=\"Filter nonconformances by severity\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "supplier_delivery_report", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def supplier_delivery_report($/", "language": "Python", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), supplier_id: Optional[str] = Query(None, description=\"Filter by supplier UUID\"), status: Optional[str] = Query(None, description=\"Filter POs by status\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )"}, {"_type": "tag", "name": "work_order_status_report", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159959/manufacturing_api/src/api/routes/reports.py", "pattern": "/^async def work_order_status_report($/", "language": "Python", "kind": "function", "signature": "( session: AsyncSession = Depends(get_tenant_session), status: Optional[str] = Query(None, description=\"Filter by work order status\"), format: str = Query(\"csv\", description=\"Export format: csv | xlsx | pdf\"), )"}], "hash": "cd72747caf8988603d350b7b7ae5da92", "format-version": 4, "code-base-name": "manufacturing_api", "filename": "manufacturing_api/src/api/routes/reports.py", "fields": [{"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}]}